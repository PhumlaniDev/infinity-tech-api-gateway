name: CI Workflow

permissions:
  issues: read
  contents: read
  actions: read
  security-events: write
  pull-requests: read

on:
  workflow_dispatch:
  pull_request:
    branches: [ develop, main ]
  push:
    branches: [ develop, main ]

jobs:
  setup:
    name: Setup Environment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "21"
          cache: "maven"

      - name: Pre-fetch Maven dependencies
        run: mvn dependency:go-offline

  checkstyle:
    name: Checkstyle
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Run Checkstyle
        run: mvn --batch-mode checkstyle:check

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: checkstyle
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "21"
          cache: "maven"

      - name: Copy Maven settings
        run: |
          mkdir -p ~/.m2
          cp .github/settings.xml ~/.m2/settings.xml

      - name: Build with Maven
        run: mvn --batch-mode clean install -DskipTests -Dspring.profiles.active=dev --settings .github/settings.xml
        env:
          GITHUB_USERNAME: ${{ secrets.GITHUB_USERNAME }}
          GH_PAT: ${{ secrets.GH_PAT }}
          GH_USERNAME: ${{ secrets.GH_USERNAME }}

      - name: Build and Tag Docker Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/api-gateway:${{ github.run_number }} .
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/api-gateway:${{ github.run_number }} ${{ secrets.DOCKERHUB_USERNAME }}/api-gateway:latest
      

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/api-gateway:${{ github.run_number }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/api-gateway:latest

  sast:
    needs: build
    name: Static Application Security Testing (SAST)
    uses: PhumlaniDev/reusable-workflows/.github/workflows/sast.yml@main
    secrets:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_URL: ${{ secrets.SONAR_URL }}
      SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
      SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}

  sca:
    needs: build
    name: Software Composition Analysis (SCA)
    uses: PhumlaniDev/reusable-workflows/.github/workflows/sca.yml@main
    with:
      project_name: 'api-gateway'
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  #  dast:
  #    needs: build
  #    name: Dynamic Application Security Testing (DAST)
  #    uses: PhumlaniDev/reusable-workflows/.github/workflows/dast.yml@main
  #    secrets:
  #      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  #      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
  #    with:
  #      image-tag: '${{ secrets.DOCKERHUB_USERNAME }}/api-gateway:latest'

  notify:
    uses: PhumlaniDev/reusable-workflows/.github/workflows/discord-notify.yml@main
    needs:
      - checkstyle
      - build
      - sast
      - sca
    if: always()
    with:
      status: >-
        ${{ (needs.unit-tests.result == 'success' && needs.sast.result == 'success' && needs.sca.result == 'success' && needs.dast.result == 'success') && 'success' || 'failure' }}
      title: "ðŸš€ Workflow Run - Combined Status"
      description: |
        Checkstyle: `${{ needs.checkstyle.result }}`
        Build: `${{ needs.build.result }}`
        SAST: `${{ needs.sast.result }}`
        SCA: `${{ needs.sca.result }}`
        Commit: `${{ github.sha }}`
        [View Commit](https://github.com/${{ github.repository }}/commit/${{ github.sha }})
      color: >-
        ${{ (needs.unit-tests.result == 'success' && needs.sast.result == 'success' && needs.sca.result == 'success' && needs.dast.result == 'success') && '3066993' || '15158332' }}
    secrets:
      DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}